version: 2.1
jobs:
  setup-python-venv:
    docker:
      - image: cimg/python:3.9.2
    steps:
      - checkout
      - restore_cache:
          keys: 
            - python-venv-a-{{ checksum "requirements.txt" }}
            - python-venv-a-
      - run:
          name: persist build number to workspace
          command: |
            echo "export BUILD_NUMBER=${CIRCLE_BUILD_NUM}" > ~/build_number
      - persist_to_workspace:
          root: ~/
          paths:
            - build_number
      - run:
          name: setup python venv and install requirements
          command: |
            python -m venv .venv
            . .venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths: [.venv]
          key: python-venv-a-{{ checksum "requirements.txt" }}
  
  setup-hadolint:
    docker:
      - image: cimg/python:3.9.2
    environment:
      HADOLINT_DL_ADDR: "https://github.com/hadolint/hadolint/releases/download/v1.23.0/hadolint-Linux-x86_64"
    steps:
      - restore_cache:
          keys: 
            - hadolint-$HADOLINT_DL_ADDR
      - run:
          name: install hadolint binary
          command: |
            if [ ! -f ./hadolint/hadolint ] ; then
              mkdir -p hadolint/ || true
              wget -O ./hadolint/hadolint $HADOLINT_DL_ADDR
              chmod +x ./hadolint/hadolint
            fi
      - save_cache:
          paths: [hadolint]
          key: hadolint-$HADOLINT_DL_ADDR

  lint-app:
    docker:
        - image: cimg/python:3.9.2
    steps:
      - checkout
      - restore_cache:
          keys: 
            - python-venv-a-{{ checksum "requirements.txt" }}
            - python-venv-a-
      - run:
          name: linting application and smoke test
          command: |
            . .venv/bin/activate
            pylint *.py
  app-smoke-test:
    docker:
        - image: cimg/python:3.9.2
    steps:
      - checkout
      - restore_cache:
          keys: 
            - python-venv-a-{{ checksum "requirements.txt" }}
            - python-venv-a-
      - run:
          name: run bare application smoke test
          command: |
            . .venv/bin/activate
            python app.py &
            # note that sleep could cause flakiness - but ... damn.
            sleep 1
            nosetests -v smoke_test.py
  lint-dockerfile:
    docker:
        - image: cimg/python:3.9.2
    steps:
      - checkout
      - restore_cache:
          keys: 
            - hadolint-$HADOLINT_DL_ADDR
            - hadolint-
      - run:
          name: linting application dockerfile
          command: |
            ./hadolint/hadolint Dockerfile
      - run:
          name: linting smoke test dockerfile
          command: |
            ./hadolint/hadolint Dockerfile.smoke
  build-app-container:
    docker:
      - image: cimg/python:3.9.2
    steps:
      - checkout
      - restore_cache:
          keys: 
            - python-venv-a-{{ checksum "requirements.txt" }}
            - python-venv-a-
      - setup_remote_docker:
          version: 19.03.13
      - attach_workspace:
          at: /tmp/workspace
      - run: 
          name: build application container
          command: |
            source /tmp/workspace/build_number
            TAG=0.1.${BUILD_NUMBER}
            docker build -t cowsay-web:$TAG .
            echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_ID} --password-stdin
            docker tag cowsay-web:$TAG ${DOCKER_ID}/cowsay-web:$TAG
            docker tag cowsay-web:$TAG ${DOCKER_ID}/cowsay-web:latest
            docker push ${DOCKER_ID}/cowsay-web
  container-smoke-test:
    docker:
      - image: cimg/python:3.9.2
    steps:
      - checkout
      - restore_cache:
          keys: 
            - python-venv-a-{{ checksum "requirements.txt" }}
            - python-venv-a-
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: build smoke test container
          command: |
            docker build -t cowsay-smoke-test -f Dockerfile.smoke .
      - run:
          name: run smoke test against app container
          command: |
            docker run --name cowsay-web -d -p 8080:8080 ${DOCKER_ID}/cowsay-web:latest
            docker ps
            # note again that sleep could cause flakiness - but ... damn, again.
            sleep 1
            docker run --network container:cowsay-web --name cowsay-smoke-test cowsay-smoke-test
  deploy-new-image:
    docker:
      - image:  cimg/python:3.9.2
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: update deployment using latest image
          command: |
            source /tmp/workspace/build_number
            export DOCKER_TAG=0.1.${BUILD_NUMBER}
            sed "s/DOCKER_TAG/${DOCKER_TAG}/" k8s/cowsay-deployment-template.yml > /tmp/deployment.${DOCKER_TAG}.yml
            docker run -i \
              --env AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
              --env AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
              --env AWS_DEFAULT_REGION={AWS_DEFAULT_REGION} \
              --env EKS_CLUSTER_NAME=${EKS_CLUSTER_NAME} \
              ttannhaeuser/aws-k8s-deploy:latest < /tmp/deployment.${DOCKER_TAG}.yml
workflows:
  default:
    jobs:
      - setup-python-venv
      - setup-hadolint
      - lint-app:
          requires: [setup-python-venv]
      - app-smoke-test:
          requires: [lint-app]
      - lint-dockerfile:
          requires: [setup-hadolint]
      - build-app-container:
          requires: [app-smoke-test, lint-dockerfile]
      - container-smoke-test:
          requires: [build-app-container]
      - deploy-new-image:
          requires: [container-smoke-test]
